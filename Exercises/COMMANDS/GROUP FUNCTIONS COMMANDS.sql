-- DISPLAY THE TOTAL NUMBER OF EMPLOYEES
SELECT COUNT(*) FROM EMPLOYEE;

-- DSIPLAY THE TOTAL NUMBER OF EMPLOYEES OF THE DEPARTMENT 10
SELECT COUNT(*) FROM EMPLOYEE WHERE DEPARTMENT_ID = 10;

-- DISPLAY THE TOTAL NUMBER OF EMPLOYEES WHO GET A COMISSION
SELECT COUNT(COMMISSION) FROM EMPLOYEE;
-- EQUIVALENT TO
SELECT COUNT(*) FROM EMPLOYEE WHERE COMMISSION IS NOT NULL;

-- DISPLAY THE TOTAL NUMBER OF EMPLOYEES AND THE TOTAL NUMBER OF EMPLOYEES WHO GET A COMMISSION
SELECT COUNT(*) NB_EMPL, COUNT(COMMISSION) NB_EMP_WITH_COMMISSION FROM EMPLOYEE;

-- DISPLAY THE TOTAL NUMBER OF EMPLOYEE AND THE TOTAL NUMBER OF EMPLOYEES WHO GET A COMMISSION
-- DISPLAY ALSO THE PERCENTAGE OF THE EMPLOYEES WHO GET COMMISSION
SELECT COUNT(*) NB_EMPL, 
       COUNT(COMMISSION) NB_EMPLOYEE_W_COMM,
       COUNT(COMMISSION)*100/COUNT(*)
       FROM EMPLOYEE;
       
-- DISPLAY THE MIN AND MAX SALARY
SELECT MIN(SALARY), MAX(SALARY) FROM EMPLOYEE;

-- DISPLAY THE OLDEST AND RECENT HIRE DATE
SELECT MIN(HIRE_DATE), MAX(HIRE_DATE) FROM EMPLOYEE;

-- DISPLAY THE OLDEST AND RECENT HIRE DATE WITH THE FORMAT (DAY-MONTH-YEAR)
SELECT TO_CHAR(MIN(HIRE_DATE), 'DAY MONTH YEAR'), TO_CHAR(MAX(HIRE_DATE), 'DAY MONTH YEAR') FROM EMPLOYEE;

-- DISPLAY THE SUM AND AVERAGE SALARY
SELECT SUM(SALARY), AVG(SALARY) FROM EMPLOYEE;

-- DISPLAY THE SUM AND AVERAGE SALARY AND ROUND THE AVERAGE IN 2 DECIMAL POSITIONS
SELECT SUM(SALARY), ROUND(AVG(SALARY),2) FROM EMPLOYEE;

-----------------------------------------------------------------------------------------------------------

-- DISPLAY THE TOTAL NUMBER OF EMPLOYEES PER DEPARTMENT ID
SELECT DEPARTMENT_ID, COUNT(*) FROM EMPLOYEE GROUP BY DEPARTMENT_ID;

-- DISPLAY THE SUM AND AVERAGE SALARY PER DEPARTMENT
-- ORDER THE RESULTS IN ASCENDING ORDER OF DEPARTMENT_ID
SELECT DEPARTMENT_ID, SUM(SALARY), ROUND(AVG(SALARY),2) FROM EMPLOYEE 
GROUP BY DEPARTMENT_ID 
ORDER BY DEPARTMENT_ID;

-- DISPLAY THE COUNT AND THE MINIMUM, MAXIMUM OF SALARY PER JOB ID
SELECT JOB_ID, COUNT(*), MIN(SALARY), MAX(SALARY) FROM EMPLOYEE
GROUP BY JOB_ID;

-- DISPLAY THE COUNT AND THE MINIMUM, MAXIMUM OF SALARY PER JOB ID
-- ORDER RESILTS IN ASCENDING ORDER OF THE MAX SALARY
SELECT JOB_ID, COUNT(*), MIN(SALARY), MAX(SALARY) FROM EMPLOYEE
GROUP BY JOB_ID
ORDER BY MAX(SALARY);

-- DISPLAY THE COUNT AND THE MINIMUM, MAXIMUM OF SALARY PER JOB ID
-- ORDER RESILTS IN DESCENDING ORDER OF THE MAX SALARY
SELECT JOB_ID, COUNT(*), MIN(SALARY), MAX(SALARY) FROM EMPLOYEE
GROUP BY JOB_ID
ORDER BY MAX(SALARY) DESC;

-- FOR THE FUNCTIONS 667, 668, 669, DISPLAY THE COUNT AND THE MINIMUM, MAXIMUM OF SALARY PER JOB ID
-- ORDER RESILTS IN DESCENDING ORDER OF THE MAX SALARY
SELECT JOB_ID, COUNT(*), MIN(SALARY), MAX(SALARY) FROM EMPLOYEE
WHERE JOB_ID IN (667, 668, 669)
GROUP BY JOB_ID
ORDER BY MAX(SALARY) DESC;

-- FOR EACH DEPARTMENT ID AND JOB ID DISPLAY THE TOTAL NUMBER OF EMPLOYEES
-- THE SUM AND AVERAGE OF SALARY.
-- DISPLAY THE RESULTS IN ASCENDING ORDER BY DEPARTMENT_ID AND DESCENDING ORDER OF JOB_ID
SELECT DEPARTMENT_ID, JOB_ID, COUNT(*), SUM(SALARY), AVG(SALARY)
FROM EMPLOYEE
GROUP BY DEPARTMENT_ID, JOB_ID
ORDER BY DEPARTMENT_ID ASC, JOB_ID DESC;

----------------------------------------------------------------------------------------

-- DISPLAY THE DEPARTMENT ID THAT HAVE AT LEAST 3 EMPLOYEES IN TOTAL
SELECT DEPARTMENT_ID, COUNT(*)
FROM EMPLOYEE
HAVING COUNT(*)>=3
GROUP BY DEPARTMENT_ID;

-- DISPLAY THE DEPARTMENT ID WHERE THE AVERAGE OF THE SALARY OF ITS EMPLOYEES 
-- IS GREATER OR EQUAL TO 1900. DISPLAY RESULTS IN ASCENDING ORDER OF THE AVERAGE SALARY
SELECT DEPARTMENT_ID, ROUND(AVG(SALARY),2)
FROM EMPLOYEE
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) > 1900
ORDER BY AVG(SALARY) ASC;

-----------------------------------------------------------------------------------------
-- DISPLAY THE EMPLOYEE LAST NAME AND THE DEPARMENT NAME
SELECT LAST_NAME, NAME 
FROM EMPLOYEE 
JOIN DEPARTMENT USING(DEPARTMENT_ID);
-- EQUIVALENT TO
SELECT LAST_NAME, NAME 
FROM EMPLOYEE 
JOIN DEPARTMENT ON EMPLOYEE.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID;

-- USING ALIAS

-- DISPLAY THE EMPLOYEE LAST NAME AND THE DEPARMENT NAME
SELECT LAST_NAME, NAME 
FROM EMPLOYEE E
JOIN DEPARTMENT D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID;

-- DISPLAY THE DEPARTMENT ID, LAST NAME, DEPARTMENT NAME
SELECT E.DEPARTMENT_ID, D.DEPARTMENT_ID, LAST_NAME, NAME 
FROM EMPLOYEE E
JOIN DEPARTMENT D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID;

-- DISPLAY THE EMPLOYEE LAST NAME AND THE DEPARTMENT NAME AND JOB TITLE
-- EXAMPLE OF A RELATIONAL JOIN (EQUIJOIN)
SELECT LAST_NAME, NAME, FUNCTION
FROM EMPLOYEE
JOIN DEPARTMENT USING (DEPARTMENT_ID)
JOIN JOB USING(JOB_ID);
-- EQUIVALENT TO
SELECT LAST_NAME, NAME, FUNCTION
FROM EMPLOYEE E, DEPARTMENT D, JOB J
JOIN DEPARTMENT USING (DEPARTMENT_ID)
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.JOB_ID=J.JOB_ID;

-- DISPLAY THE EMPLOYEE LAST_NAME, SALARY AND DEPARTMENT NAME
-- WHO WORK IN THE DEPARTMENT 10 OR 20
SELECT LAST_NAME, SALARY, NAME
FROM EMPLOYEE
JOIN DEPARTMENT USING(DEPARTMENT_ID)
WHERE DEPARTMENT_ID IN (10, 20);

-- JOINING 2 TABLES ===== 1 JOIN CONDITIONS
-- JOINING 3 TABLES ===== 2 JOIN CONDITIONS

SELECT LAST_NAME, NAME, FUNCTION
FROM EMPLOYEE E, DEPARTMENT D, JOB J
WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID;

-- DISPLAY THE CUSTOMER ID, NAME
-- DISPLAY THE CUSTOMER ID, NAME, THE CORRESPONDING EMPLOYEE SALESPERSON (ID, LAST NAME)
SELECT CUSTOMER_ID, NAME, EMPLOYEE_ID, LAST_NAME
FROM CUSTOMER C
JOIN EMPLOYEE E ON C.SALESPERSON_ID=E.EMPLOYEE_ID;

